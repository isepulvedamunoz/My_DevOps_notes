Problemas del desarrollo de software, y que promete Docker
    
    Problems when building:
        Development dependencies (packages)
        Runtime versions
        Equivalence of development environments (code sharing)
        Equivalence of production environments(go to production)
        Versions / compatibility(integration of other services e.g.: databases)

    Problems when distributing:
        Different build generations
        Access to production servers
        Native vs. distributed execution
        Serverless

    Problems when executing:
        Application dependencies
        Operating System Compatibility
        Availability of external services
        Hardware Resources

    Docker allows:
        Build, distribute and run your code anywhere without worrying.






Virtualizacion


    Permite atacar en simultáneo los tres problemas del desarrollo de software profesional.

    Problemas de la virtualizacion

    PESO: En el orden de los GBs. Repiten archivos en común. Inicio lento.
    COSTO DE ADMINISTRACION: Necesita mantenimiento igual que cualquier otra computadora.
    MULTIPLES DE FORMATO: VDI, VMDK, VHD, raw, etc
    Containerización
    El empleo de contenedores para construir y desplegar software.

    Flexibles
    Livianos
    Portables
    Bajo acoplamiento
    Escalables
    Seguros



Virtualizacion vs Containerización

    Virtualización: A diferencia de un contenedor, las máquinas virtuales ejecutan un sistema operativo completo, incluido su propio kernel.
    Containerización: Un contenedor es un silo aislado y ligero para ejecutar una aplicación en el sistema operativo host. Los contenedores 
    se basan en el kernel del sistema operativo host (que puede considerarse la fontanería del sistema operativo), y solo puede contener 
    aplicaciones y algunas API ligeras del sistema operativo y servicios que se ejecutan en modo de usuario.

